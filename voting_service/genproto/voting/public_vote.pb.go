// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.26.1
// source: public_vote.proto

package voting

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreatePublicVoteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ElectionId  string `protobuf:"bytes,1,opt,name=election_id,json=electionId,proto3" json:"election_id,omitempty"`
	PublicId    string `protobuf:"bytes,2,opt,name=public_id,json=publicId,proto3" json:"public_id,omitempty"`
	CandidateId string `protobuf:"bytes,3,opt,name=candidate_id,json=candidateId,proto3" json:"candidate_id,omitempty"`
}

func (x *CreatePublicVoteReq) Reset() {
	*x = CreatePublicVoteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_vote_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePublicVoteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePublicVoteReq) ProtoMessage() {}

func (x *CreatePublicVoteReq) ProtoReflect() protoreflect.Message {
	mi := &file_public_vote_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePublicVoteReq.ProtoReflect.Descriptor instead.
func (*CreatePublicVoteReq) Descriptor() ([]byte, []int) {
	return file_public_vote_proto_rawDescGZIP(), []int{0}
}

func (x *CreatePublicVoteReq) GetElectionId() string {
	if x != nil {
		return x.ElectionId
	}
	return ""
}

func (x *CreatePublicVoteReq) GetPublicId() string {
	if x != nil {
		return x.PublicId
	}
	return ""
}

func (x *CreatePublicVoteReq) GetCandidateId() string {
	if x != nil {
		return x.CandidateId
	}
	return ""
}

type GetPublicVoteRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ElectionId  string `protobuf:"bytes,2,opt,name=election_id,json=electionId,proto3" json:"election_id,omitempty"`
	PublicId    string `protobuf:"bytes,3,opt,name=public_id,json=publicId,proto3" json:"public_id,omitempty"`
	CandidateId string `protobuf:"bytes,4,opt,name=candidate_id,json=candidateId,proto3" json:"candidate_id,omitempty"`
}

func (x *GetPublicVoteRes) Reset() {
	*x = GetPublicVoteRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_vote_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPublicVoteRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublicVoteRes) ProtoMessage() {}

func (x *GetPublicVoteRes) ProtoReflect() protoreflect.Message {
	mi := &file_public_vote_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublicVoteRes.ProtoReflect.Descriptor instead.
func (*GetPublicVoteRes) Descriptor() ([]byte, []int) {
	return file_public_vote_proto_rawDescGZIP(), []int{1}
}

func (x *GetPublicVoteRes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetPublicVoteRes) GetElectionId() string {
	if x != nil {
		return x.ElectionId
	}
	return ""
}

func (x *GetPublicVoteRes) GetPublicId() string {
	if x != nil {
		return x.PublicId
	}
	return ""
}

func (x *GetPublicVoteRes) GetCandidateId() string {
	if x != nil {
		return x.CandidateId
	}
	return ""
}

type GetVoteById struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CandidateId string `protobuf:"bytes,1,opt,name=candidate_id,json=candidateId,proto3" json:"candidate_id,omitempty"`
	Count       int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetVoteById) Reset() {
	*x = GetVoteById{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_vote_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVoteById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVoteById) ProtoMessage() {}

func (x *GetVoteById) ProtoReflect() protoreflect.Message {
	mi := &file_public_vote_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVoteById.ProtoReflect.Descriptor instead.
func (*GetVoteById) Descriptor() ([]byte, []int) {
	return file_public_vote_proto_rawDescGZIP(), []int{2}
}

func (x *GetVoteById) GetCandidateId() string {
	if x != nil {
		return x.CandidateId
	}
	return ""
}

func (x *GetVoteById) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetAllVotes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Votes []*GetVoteById `protobuf:"bytes,1,rep,name=votes,proto3" json:"votes,omitempty"`
}

func (x *GetAllVotes) Reset() {
	*x = GetAllVotes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_vote_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllVotes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllVotes) ProtoMessage() {}

func (x *GetAllVotes) ProtoReflect() protoreflect.Message {
	mi := &file_public_vote_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllVotes.ProtoReflect.Descriptor instead.
func (*GetAllVotes) Descriptor() ([]byte, []int) {
	return file_public_vote_proto_rawDescGZIP(), []int{3}
}

func (x *GetAllVotes) GetVotes() []*GetVoteById {
	if x != nil {
		return x.Votes
	}
	return nil
}

type GetAllPublicVoteRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicVotes []*GetPublicVoteRes `protobuf:"bytes,1,rep,name=PublicVotes,proto3" json:"PublicVotes,omitempty"`
}

func (x *GetAllPublicVoteRes) Reset() {
	*x = GetAllPublicVoteRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_vote_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllPublicVoteRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllPublicVoteRes) ProtoMessage() {}

func (x *GetAllPublicVoteRes) ProtoReflect() protoreflect.Message {
	mi := &file_public_vote_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllPublicVoteRes.ProtoReflect.Descriptor instead.
func (*GetAllPublicVoteRes) Descriptor() ([]byte, []int) {
	return file_public_vote_proto_rawDescGZIP(), []int{4}
}

func (x *GetAllPublicVoteRes) GetPublicVotes() []*GetPublicVoteRes {
	if x != nil {
		return x.PublicVotes
	}
	return nil
}

var File_public_vote_proto protoreflect.FileDescriptor

var file_public_vote_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x06, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x1a, 0x0e, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x76, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x56, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x64, 0x22, 0x83, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61,
	0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x56, 0x6f, 0x74, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x64,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x38, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x56, 0x6f, 0x74, 0x65, 0x73,
	0x12, 0x29, 0x0a, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x74, 0x65,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x22, 0x51, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x56, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x12, 0x3a, 0x0a, 0x0b, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x56, 0x6f, 0x74, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x52, 0x0b, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x32, 0xf7,
	0x02, 0x0a, 0x11, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x56, 0x6f, 0x74, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1b,
	0x2e, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x76, 0x6f,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x07, 0x47,
	0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x0c, 0x2e, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x42, 0x79, 0x49, 0x64, 0x1a, 0x18, 0x2e, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00,
	0x12, 0x37, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x0e, 0x2e, 0x76, 0x6f, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x1b, 0x2e, 0x76, 0x6f, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x06, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x1a, 0x0c, 0x2e,
	0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x26, 0x0a,
	0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0c, 0x2e, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x42, 0x79, 0x49, 0x64, 0x1a, 0x0c, 0x2e, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x56,
	0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x74, 0x65,
	0x12, 0x0c, 0x2e, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x42, 0x79, 0x49, 0x64, 0x1a, 0x13,
	0x2e, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x42,
	0x79, 0x49, 0x64, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x74, 0x65,
	0x73, 0x12, 0x0e, 0x2e, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x1a, 0x13, 0x2e, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x22, 0x00, 0x42, 0x12, 0x5a, 0x10, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_public_vote_proto_rawDescOnce sync.Once
	file_public_vote_proto_rawDescData = file_public_vote_proto_rawDesc
)

func file_public_vote_proto_rawDescGZIP() []byte {
	file_public_vote_proto_rawDescOnce.Do(func() {
		file_public_vote_proto_rawDescData = protoimpl.X.CompressGZIP(file_public_vote_proto_rawDescData)
	})
	return file_public_vote_proto_rawDescData
}

var file_public_vote_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_public_vote_proto_goTypes = []interface{}{
	(*CreatePublicVoteReq)(nil), // 0: voting.CreatePublicVoteReq
	(*GetPublicVoteRes)(nil),    // 1: voting.GetPublicVoteRes
	(*GetVoteById)(nil),         // 2: voting.GetVoteById
	(*GetAllVotes)(nil),         // 3: voting.GetAllVotes
	(*GetAllPublicVoteRes)(nil), // 4: voting.GetAllPublicVoteRes
	(*ById)(nil),                // 5: voting.ById
	(*Filter)(nil),              // 6: voting.Filter
	(*Void)(nil),                // 7: voting.Void
}
var file_public_vote_proto_depIdxs = []int32{
	2, // 0: voting.GetAllVotes.votes:type_name -> voting.GetVoteById
	1, // 1: voting.GetAllPublicVoteRes.PublicVotes:type_name -> voting.GetPublicVoteRes
	0, // 2: voting.PublicVoteService.Create:input_type -> voting.CreatePublicVoteReq
	5, // 3: voting.PublicVoteService.GetById:input_type -> voting.ById
	6, // 4: voting.PublicVoteService.GetAll:input_type -> voting.Filter
	1, // 5: voting.PublicVoteService.Update:input_type -> voting.GetPublicVoteRes
	5, // 6: voting.PublicVoteService.Delete:input_type -> voting.ById
	5, // 7: voting.PublicVoteService.GetVote:input_type -> voting.ById
	6, // 8: voting.PublicVoteService.GetVotes:input_type -> voting.Filter
	7, // 9: voting.PublicVoteService.Create:output_type -> voting.Void
	1, // 10: voting.PublicVoteService.GetById:output_type -> voting.GetPublicVoteRes
	4, // 11: voting.PublicVoteService.GetAll:output_type -> voting.GetAllPublicVoteRes
	7, // 12: voting.PublicVoteService.Update:output_type -> voting.Void
	7, // 13: voting.PublicVoteService.Delete:output_type -> voting.Void
	2, // 14: voting.PublicVoteService.GetVote:output_type -> voting.GetVoteById
	3, // 15: voting.PublicVoteService.GetVotes:output_type -> voting.GetAllVotes
	9, // [9:16] is the sub-list for method output_type
	2, // [2:9] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_public_vote_proto_init() }
func file_public_vote_proto_init() {
	if File_public_vote_proto != nil {
		return
	}
	file_election_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_public_vote_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePublicVoteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_vote_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPublicVoteRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_vote_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVoteById); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_vote_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllVotes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_vote_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllPublicVoteRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_public_vote_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_public_vote_proto_goTypes,
		DependencyIndexes: file_public_vote_proto_depIdxs,
		MessageInfos:      file_public_vote_proto_msgTypes,
	}.Build()
	File_public_vote_proto = out.File
	file_public_vote_proto_rawDesc = nil
	file_public_vote_proto_goTypes = nil
	file_public_vote_proto_depIdxs = nil
}
