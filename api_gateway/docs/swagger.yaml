basePath: /
definitions:
  public.ById:
    properties:
      id:
        type: string
    type: object
  public.CreatePartyReq:
    properties:
      description:
        type: string
      name:
        type: string
      opened_date:
        type: string
      slogan:
        type: string
    type: object
  public.CreatePublicReq:
    properties:
      birthday:
        type: string
      first_name:
        type: string
      gender:
        type: string
      last_name:
        type: string
      nation:
        type: string
      party_id:
        type: string
    type: object
  public.GetAllPartyRes:
    properties:
      Parties:
        items:
          $ref: '#/definitions/public.GetPartyRes'
        type: array
    type: object
  public.GetAllPublicRes:
    properties:
      Publics:
        items:
          $ref: '#/definitions/public.GetPublicRes'
        type: array
    type: object
  public.GetPartyRes:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
      opened_date:
        type: string
      slogan:
        type: string
    type: object
  public.GetPublicRes:
    properties:
      birthday:
        type: string
      first_name:
        type: string
      gender:
        type: string
      id:
        type: string
      last_name:
        type: string
      nation:
        type: string
      party_id:
        type: string
    type: object
  public.Void:
    type: object
  voting.CreateCandidateReq:
    properties:
      election_id:
        type: string
      party_id:
        type: string
      public_id:
        type: string
    type: object
  voting.CreateElectionReq:
    properties:
      date:
        type: string
      name:
        type: string
    type: object
  voting.CreatePublicVoteReq:
    properties:
      candidate_id:
        type: string
      election_id:
        type: string
      public_id:
        type: string
    type: object
  voting.GetAllElectionRes:
    properties:
      Elections:
        items:
          $ref: '#/definitions/voting.GetElectionRes'
        type: array
    type: object
  voting.GetAllVotes:
    properties:
      votes:
        items:
          $ref: '#/definitions/voting.GetVoteById'
        type: array
    type: object
  voting.GetCandidateRes:
    properties:
      election_id:
        type: string
      id:
        type: string
      party_id:
        type: string
      public_id:
        type: string
    type: object
  voting.GetElectionRes:
    properties:
      date:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  voting.GetPublicVoteRes:
    properties:
      candidate_id:
        type: string
      election_id:
        type: string
      id:
        type: string
      public_id:
        type: string
    type: object
  voting.GetVoteById:
    properties:
      candidate_id:
        type: string
      count:
        type: integer
    type: object
  voting.Void:
    type: object
info:
  contact: {}
  title: Online Voting System Swagger UI
paths:
  /candidate/create:
    post:
      consumes:
      - application/json
      description: Endpoint for creating a new candidate
      parameters:
      - description: Candidate creation request payload
        in: body
        name: candidate
        required: true
        schema:
          $ref: '#/definitions/voting.CreateCandidateReq'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created candidate
          schema:
            $ref: '#/definitions/voting.Void'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to create candidate
          schema:
            type: string
      summary: Create a new candidate
      tags:
      - Candidate
  /candidate/delete:
    delete:
      consumes:
      - application/json
      description: Endpoint for deleting candidate
      operationId: delete_candidate
      parameters:
      - in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted candidate
          schema:
            $ref: '#/definitions/voting.Void'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to delete candidate
          schema:
            type: string
      summary: Delete Candidate
      tags:
      - Candidate
  /candidate/getall:
    get:
      consumes:
      - application/json
      description: Endpoint for getting all candidates
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully getted candidates
          schema:
            $ref: '#/definitions/voting.GetCandidateRes'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to get candidates
          schema:
            type: string
      summary: Get All Candidates
      tags:
      - Candidate
  /candidate/getbyid:
    get:
      consumes:
      - application/json
      description: Endpoint for getting candidate
      parameters:
      - in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully getted candidate
          schema:
            $ref: '#/definitions/voting.GetCandidateRes'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to get candidate
          schema:
            type: string
      summary: Get Candidate
      tags:
      - Candidate
  /candidate/update:
    put:
      consumes:
      - application/json
      description: Endpoint for deleting candidate
      operationId: update_candidate
      parameters:
      - description: Candidate updaing request payload
        in: body
        name: candidate
        required: true
        schema:
          $ref: '#/definitions/voting.GetCandidateRes'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated candidate
          schema:
            $ref: '#/definitions/voting.Void'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to update candidate
          schema:
            type: string
      summary: Update Candidate
      tags:
      - Candidate
  /election/create:
    post:
      consumes:
      - application/json
      description: Endpoint for creating a new election
      parameters:
      - description: Election creation request payload
        in: body
        name: election
        required: true
        schema:
          $ref: '#/definitions/voting.CreateElectionReq'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created election
          schema:
            $ref: '#/definitions/voting.Void'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to create election
          schema:
            type: string
      summary: Create a new election
      tags:
      - Election
  /election/delete:
    delete:
      consumes:
      - application/json
      description: Endpoint for deleting election
      operationId: delete_election
      parameters:
      - in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted election
          schema:
            $ref: '#/definitions/voting.Void'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to delete election
          schema:
            type: string
      summary: Delete election
      tags:
      - Election
  /election/getall:
    get:
      consumes:
      - application/json
      description: Endpoint for getting all elections
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully getted elections
          schema:
            $ref: '#/definitions/voting.GetAllElectionRes'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to get elections
          schema:
            type: string
      summary: Get All Elections
      tags:
      - Election
  /election/getbyid:
    get:
      consumes:
      - application/json
      description: Endpoint for getting election
      parameters:
      - in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully getted election
          schema:
            $ref: '#/definitions/voting.GetElectionRes'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to get election
          schema:
            type: string
      summary: Get Election
      tags:
      - Election
  /election/update:
    put:
      consumes:
      - application/json
      description: Endpoint for deleting election
      operationId: update_election
      parameters:
      - description: Election updaing request payload
        in: body
        name: election
        required: true
        schema:
          $ref: '#/definitions/voting.GetElectionRes'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated election
          schema:
            $ref: '#/definitions/voting.Void'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to update election
          schema:
            type: string
      summary: Update election
      tags:
      - Election
  /party/create:
    post:
      consumes:
      - application/json
      description: |-
        Endpoint for creating a new party
        create_party
      parameters:
      - description: Party creation request payload
        in: body
        name: party
        required: true
        schema:
          $ref: '#/definitions/public.CreatePartyReq'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created party
          schema:
            $ref: '#/definitions/public.Void'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to create party
          schema:
            type: string
      summary: Create a new party
      tags:
      - Party
  /party/delete:
    delete:
      consumes:
      - application/json
      description: Endpoint for deleting party
      operationId: delete_party
      parameters:
      - in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted party
          schema:
            $ref: '#/definitions/public.Void'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to delete party
          schema:
            type: string
      summary: Delete party
      tags:
      - Party
  /party/getall:
    get:
      consumes:
      - application/json
      description: Endpoint for getting all parties
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully getted parties
          schema:
            $ref: '#/definitions/public.GetAllPartyRes'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to get parties
          schema:
            type: string
      summary: Get All Parties
      tags:
      - Party
  /party/getbyid:
    get:
      consumes:
      - application/json
      description: Endpoint for getting party
      parameters:
      - in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully getted party
          schema:
            $ref: '#/definitions/public.GetPartyRes'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to get party
          schema:
            type: string
      summary: Get Party
      tags:
      - Party
  /party/update:
    put:
      consumes:
      - application/json
      description: Endpoint for deleting Party
      operationId: update_party
      parameters:
      - description: Party updating request payload
        in: body
        name: party
        required: true
        schema:
          $ref: '#/definitions/public.GetPartyRes'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated party
          schema:
            $ref: '#/definitions/public.Void'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to update party
          schema:
            type: string
      summary: Update Party
      tags:
      - Party
  /public/create:
    post:
      consumes:
      - application/json
      description: Endpoint for creating a new public
      parameters:
      - description: Public creation request payload
        in: body
        name: public
        required: true
        schema:
          $ref: '#/definitions/public.CreatePublicReq'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created public
          schema:
            $ref: '#/definitions/public.Void'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to create public
          schema:
            type: string
      summary: Create a new public
      tags:
      - Public
  /public/delete:
    delete:
      consumes:
      - application/json
      description: Endpoint for deleting public
      operationId: delete_public
      parameters:
      - description: Public deleting request payload
        in: body
        name: public
        required: true
        schema:
          $ref: '#/definitions/public.ById'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted public
          schema:
            $ref: '#/definitions/public.Void'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to delete public
          schema:
            type: string
      summary: Delete public
      tags:
      - Public
  /public/getall:
    get:
      consumes:
      - application/json
      description: Endpoint for getting all publics
      produces:
      - application/json
      responses:
        "200":
          description: Successfully getted publics
          schema:
            $ref: '#/definitions/public.GetAllPublicRes'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to get publics
          schema:
            type: string
      summary: Get All Publics
      tags:
      - Public
  /public/getbyid:
    get:
      consumes:
      - application/json
      description: Endpoint for getting public
      parameters:
      - in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully getted public
          schema:
            $ref: '#/definitions/public.GetPublicRes'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to get public
          schema:
            type: string
      summary: Get Public
      tags:
      - Public
  /public/update:
    put:
      consumes:
      - application/json
      description: Endpoint for deleting public
      operationId: update_public
      parameters:
      - description: Public updating request payload
        in: body
        name: public
        required: true
        schema:
          $ref: '#/definitions/public.GetPublicRes'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated public
          schema:
            $ref: '#/definitions/public.Void'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to update public
          schema:
            type: string
      summary: Update public
      tags:
      - Public
  /public_vote/create:
    post:
      consumes:
      - application/json
      description: Endpoint for creating a new public_vote
      parameters:
      - description: Public_vote creation request payload
        in: body
        name: public_vote
        required: true
        schema:
          $ref: '#/definitions/voting.CreatePublicVoteReq'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created public_vote
          schema:
            $ref: '#/definitions/voting.Void'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to create public_vote
          schema:
            type: string
      summary: Create a new public_vote
      tags:
      - Public_vote
  /public_vote/getall:
    get:
      consumes:
      - application/json
      description: Endpoint for getting public_votes
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully getted public_votes
          schema:
            $ref: '#/definitions/voting.GetPublicVoteRes'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to get public_votes
          schema:
            type: string
      summary: Get Public_votes
      tags:
      - Public_vote
  /public_vote/getbyid:
    get:
      consumes:
      - application/json
      description: Endpoint for getting public_vote
      parameters:
      - in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully getted public_vote
          schema:
            $ref: '#/definitions/voting.GetPublicVoteRes'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to get public_vote
          schema:
            type: string
      summary: Get Public_vote
      tags:
      - Public_vote
  /vote/getall:
    get:
      consumes:
      - application/json
      description: Endpoint for getting vote
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully getted vote
          schema:
            $ref: '#/definitions/voting.GetAllVotes'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to get vote
          schema:
            type: string
      summary: Get Votes
      tags:
      - Vote
  /vote/getbyid:
    get:
      consumes:
      - application/json
      description: Endpoint for getting vote
      parameters:
      - in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully getted vote
          schema:
            $ref: '#/definitions/voting.GetVoteById'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to get vote
          schema:
            type: string
      summary: Get Vote
      tags:
      - Vote
securityDefinitions:
  BearerAuth:
    in: header
    name: role
    type: apiKey
swagger: "2.0"
